#main.py
# Программирование на языке высокого уровня (Python).
# Задание № 04.03.03. Вариант 4
#
# Выполнил: Винник Константин Игоревич
# Группа: ПИЖ-б-о-23-2(2)


from typing import List  # Импортируем List из модуля typing для указания типа списка

from deposit import deposits  # Импортируем переменную deposits (предположительно, список вкладов) из модуля deposit
from deposit import TimeDeposit  # Импортируем класс TimeDeposit из модуля deposit (определение вклада)

if __name__ == "__main__":  # Проверяем, является ли этот файл точкой входа (запускаемым скриптом)
    print("Добро пожаловать в систему подбора вкладов!")  # Выводим приветственное сообщение

    while True:  # Запускаем бесконечный цикл, пока пользователь не захочет выйти
        print("\n-----")  # Выводим разделитель для улучшения читаемости
        print("Нажмите 1, чтобы подобрать вклад, или что угодно для выхода.")  # Предлагаем пользователю выбор

        answer = input()  # Получаем ввод пользователя
        if answer == "1":  # Если пользователь ввел "1", значит хочет подобрать вклад

            initial_sum = float(input("1/2: Введите начальную сумму вклада: "))  # Запрашиваем начальную сумму вклада и преобразуем в float
            period = int(input("2/2: Введите срок вклада (мес.): "))  # Запрашиваем срок вклада в месяцах и преобразуем в int

            matched_deposits: List[TimeDeposit] = []  # Инициализируем пустой список для хранения подходящих вкладов (тип: список объектов TimeDeposit)
            for deposit in deposits:  # Перебираем каждый вклад в списке deposits
                try:  # Пытаемся выполнить следующий код
                    deposit._check_user_params(initial_sum, period)  # Проверяем, подходит ли текущий вклад под параметры пользователя (сумма, срок). Метод, вероятно, вызывает исключение AssertionError если не подходит.
                    matched_deposits.append(deposit)  # Если проверка прошла успешно, добавляем вклад в список подходящих вкладов
                except AssertionError as err:  # Если произошло исключение AssertionError (вклад не подходит)
                    pass  # Просто пропускаем этот вклад (ничего не делаем)

            if len(matched_deposits) > 0:  # Если список подходящих вкладов не пуст
                print("{0:18} | {1:13} | {2:13}".format(  # Выводим заголовок таблицы: форматируем строку для вывода названий столбцов
                    "Вклад", "Прибыль", "Итоговая сумма"  # Названия столбцов
                ))
                for deposit in matched_deposits:  # Перебираем каждый подходящий вклад
                    print("{0:18} | {1:8,.2f} {3:4} | {2:8,.2f} {3:4}".format(  # Выводим информацию о вкладе в формате таблицы: форматируем вывод данных о вкладе
                          deposit.name,  # Имя вклада
                          deposit.get_profit(initial_sum, period),  # Прибыль от вклада
                          deposit.get_sum(initial_sum, period),  # Итоговая сумма вклада
                          deposit.currency))  # Валюта вклада
            else:  # Если нет подходящих вкладов
                print("К сожалению, нет подходящих Вам вкладов.")  # Выводим сообщение об отсутствии подходящих вкладов

        else:  # Если пользователь ввел что-то другое, кроме "1"
            break  # Выходим из бесконечного цикла

    print("\nСпасибо, что воспользовались терминалом банка! До встречи!")  # Выводим прощальное сообщение

# -------------
# Пример вывода (файл):
#
# Добро пожаловать в систему подбора вкладов!
#
# -----
# Нажмите 1, чтобы подобрать вклад, или что угодно для выхода.
# 1
# 1/2: Введите начальную сумму вклада: 1000
# 2/2: Введите срок вклада (мес.): 12
# Вклад              | Прибыль       | Итоговая сумма
# Сохраняй           |    50.00 руб. | 1,050.00 руб.
# Бонусный           |    50.00 руб. | 1,050.00 руб.
# С капитализацией   |    51.16 руб. | 1,051.16 руб
